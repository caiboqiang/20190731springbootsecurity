# ##################配置端口####################
server:
  port: 5015
#####################配置注册中心###############
eureka:
  client:
    service-url:
      defaultZone: http://localhost:5025/eureka
####################配置服务名字#####################
spring:
  application:
    name: Zuul
####################################################
  datasource:
    url: jdbc:mysql://123.57.108.75:3306/cbqtest?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&serverTimezone=UTC
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    generate-ddl: true
    show-sql: true

  #################redis配置 做限流###################
  redis:
    database: 0
    host: 123.57.108.75
    port: 6379
    password: 123456
    jedis:
      pool:
        max-active: -1
        max-wait: -1
        max-idle: 25
        min-idle: 10
    timeout: 5000
################ Zuul动态服务配置服务路由 #########################
zuul:
  ribbon-isolation-strategy: thread #设置Hystrix隔离策略为线程池
  thread-pool.use-separate-thread-pools: true  #每个路由使用独立的线程池
  host:
    connect-timeout-millis: 10000 #HTTP连接超时大于Hystrix的超时时间
    socket-timeout-millis: 60000  #socket超时

  routes:
    token:
      #url: http://localhost:5056
      path: /token/**
      serviceId: serverOAuth
    myOne:
      path: /myOne/**
      serviceId: ServerProjectOne
    myTwo:
      path: /myTwo/**
      serviceId: serverProjectTwo
    myUser:  #   aaaaa: 可以随便写
      path: /myUser/**
      # 服务名
      serviceId: ServerProjectUser
      # 设置Cookie可传递
      #sensitiveHeaders:
    ####简洁写法
    #serviceeureka: /myservice/**
  #禁止外部访问(排除某些路由) 接口 是set集合
  #ignored-patterns:
    #- /myservice/getAll
    #- /serviceeureka/getAll
    #- /**/getAll
#忽略全部服务敏感头都可传递Cookie
  sensitive-headers:
  ratelimit:
    enabled: true
    repository: JPA #REDIS
    default-policy-list: #限流策略配置 对服务 不配默认所有
      - limit: 1 #可以过的请求数
        quota: 3 #这些请求加在一块时间是多少
        refresh-interval: 3 #时间设置 1：1秒钟可以处理多少请求
        type:
          - url
          - httpmethod
          # - user
          - origin # 针对ip设置 限流
    policy-list: #对token服务配限流
      token:
        - limit: 1
          quota: 1
          refresh-interval: 1
          type:
            - url
            - httpmethod
#配置限流


#  只需要在yml 中配置zuul 连接超时，socket超时以及断溶超时即可，
#  但需要注意的是，当hystrix的值小的时候，hystrix生效，当ribbon.ReadTimeout小的时候，ribbon生效
#  注意  boot2.0版本以上或者Finchley版本以上 ,超时策略就成了ConnectTimeout+ReadTimeout*2>	ribbon.ReadTimeout

#  注意：zuul ：host  只有zuul路由是url是才生效，如果使用的是serviceId，请使用（ribbon.ReadTimeout    ribbon.SocketTimeout   这两个）
hystrix:
  command:
    default:
      execution:
        timeout: #配置命令的执行，是否会超时
          enabled: true
        isolation: #命令的执行超时时间  超时将执行回退
          thread:
            timeoutInMilliseconds: 30000

ribbon:   #设置ribbon的超时时间小于zuul的超时时间
  ReadTimeout: 5000  #读取超时时间
  ConnectTimeout: 50000  #好像这个没什么用  如果说有人知道这个是什么作用可以评论告诉我一下
